deck: All::Magisterské státnice::Řešení úloh a plánování::Plánování a rozvrhování::Přednáška 6
notes:
        # planovani a rozvrhovani lecture06
        -
                uuid: bfc4332e-5d35-4f43-bda3-bd05086a909d
                topic: Plánování jako SAT
                front: >
                        Problém při kódování plánování do SAT/CSP, jeho řešení
                back: >
                        SAT/CSP jsou statické. Budeme hledat jenom plány
                        do nějaké maximální délky.
        -
                uuid: 6b2504bf-e38e-4c51-8c5d-4c6a3337f777
                topic: Plánování jako SAT
                front: >
                        Kódování plánování jako SAT
                back: >
                        <ul>
                        <li>
                        Atomy: výroková proměnná s jejich časem (fluenty).
                        <li>
                        Zahrnu negaci věcí, co neplatí.
                        <li>
                        Zakódujeme přechody; přidáme každému proměnnou,
                        která říká, jaká akce ho udělala.
                        <li>
                        Vyloučíme dvě akce zároveň.
                        <li>
                        Frame axioms.
                        </ul>
        -
                uuid: 80193da3-fdfe-4d45-abc6-2ce0486fdc70
                topic: Plánování jako SAT
                front: Frame axioms &mdash; 2 způsoby
                back: >
                        <ul>*Klasické*: proměnné co nejsou efekty
                        se nemění [$](p\\not\\in \\mathrm{eff}^+(a))::
                                a_i \\rightarrow (p_i \\leftrightarrow p_{i+1})[/$];
                        vyber nějakou akci: [$]\\bigvee\\{a_i : a\\in A\\}[/$]
                        <li>
                        *S vysvětlením*: atom se mění jenom akcemi:
                        [$] (\\neg p_i \\wedge p_{i+1}) \\rightarrow (\\bigvee \\{a_i: p\\in\\mathrm{eff}^+(a)\\})[/$]
                        a analogicky pro [$]\\mathrm{eff}^-[/$].
                        <br>
                        Zde stačí axiom *konfliktního vyloučení*:
                        nedělat najednou závislé akce.
        -
                uuid: b99d6e34-e2fb-4e2a-8977-e8192f6a2c3e
                front: Co se používá víc? Plánování jako SAT, nebo jako CSP?
                back: Plánování jako CSP
        -
                uuid: 6fb7a79a-87f7-47b6-a9b5-9902749c9ba4
                topic: Plánování jako SAT
                front: >
                        Jak zmenšit počet proměnných pro reprezentaci akcí
                        jako SAT?
                back: >
                        Z three-place akční proměnné (posuň robota
                        [$]r[/$] z [$]loc_1[/$] do [$]loc_2[/$])
                        udělej tři one-place akční proměnné (posuň
                        [$]r[/$], z [$]loc_1[/$], do [$]loc_2[/$]).
                        Různé akce teď sdílejí proměnné, a jde to i mezi
                        akcemi různého typu (třeba move/fly).
        -
                uuid: b851c651-d119-4dd6-ba1d-ad07c36997d6
                topic: Plánování jako CSP
                front: Rozdíl CSP reprezentace od SAT
                back: >
                        Stavové proměnné: například pozice robota, atd.<br>
                        Neměnné vztahy se popisují relacemi. Operátory
                        dělají změny stavových proměnných.
        -
                uuid: fc31ffb0-fa12-4800-beae-500e1f46decd
                topic: Plánování jako CSP
                front: Jak v CSP kódujeme akce?
                back: >
                        Jako podmínky mezi frame axiomy.
        -
                uuid: 0fd530e3-8094-40ce-87c4-c055c0707b37
                topic: Plánování jako SAT/CSP
                front: Na co nesmíme zapomenout při kódování jako CSP/SAT?
                back: >
                        Axiomy rámce
        -
                uuid: 6271c929-aaf6-4836-b1fe-6cba8cf1aabe
                topic: Plánování jako CSP
                front: Kde je dobře použitelné plánování jako CSP?
                back: >
                        *V prostoru plánů*: test konzistence (rychlý ale neúplný).
                        (Úplný jde udělat až na úplném plánu.)
                        <br>
                        *S plánovacím grafem*: použijeme CSP na extrakci.
        -
                uuid: 0eaf5364-c57f-4d4a-b6c8-35653a897312
                topic: Graphplan jako CSP
                front: >
                        Kódování do CSP - role proměnných, domén,
                        omezujících podmínek
                back: >
                        Proměnné: výroky ve stavových vrstvách.
                        <br>
                        Domény: akce, které mají atom jako pozitivní efekt,
                        [$]\\perp[/$] pro neaktivní atom.
                        <br>
                        Omezující podmínky: spojují pozitivní efekty s
                        předpoklady akce; mutexy.
        -
                uuid: 7373e1b3-4933-4c33-b38c-623723445edd
                topic: Graphplan jako CSP
                front: >
                        Kódování do CSP - přesné podmínky
                markdown: false
                back: >
                        <ul>
                        <li>
                        <i>Splnění podmínek</i>:
                        [$]p_{4,m}=a \longrightarrow p_{1,m-1}\neq\perp\wedge
                        p_{2,m-1}\neq\perp[/$]:
                        [$]\mathrm{precond}^{+}(a)=\{p_1, p_2\}[/$],
                        [$]p_4\in\mathrm{eff}^{+}(a)[/$];
                        přidám podmínku pro každý pozitivní efekt.
                        <li>
                        <i>Mutex mezi atomy</i>: [$]p_{i,m}=\perp\vee p_{j,m}=\perp[/$]
                        <li>
                        <i>Mutex mezi akcemi</i>:
                        provaž pozitivní efekty:
                        [$]p_{i,m}\neq a\vee p_{j,m}\neq b[/$]
                        <li>
                        <i>Cíl</i>: [$]p_{i,k}\neq\perp[/$] ([$]k[/$]
                        poslední vrstva).
                        <li>
                        <i>Právě 1 akce na vrstvu</i>:
                        v proměnných ve vstvě maximálně a minimálně 1
                        ne-noop akce
                        </ul>
        -
                uuid: d30a0b9f-3881-4c10-8aeb-d2f86a0125d5
                topic: Graphplan jako BCSP
                front: BCSP proměnné, domény, co dělají podmínky
                back: >
                        Boolean proměnné pro akční uzly a výrokové uzly
                        ([$]A_{j,m}, P_{j,n}[/$]).
                        <br>
                        True: akce/výrok je aktivní.
                        <br>
                        Podmínky kódují mutexy, spojují akce s předpoklady
                        a pozitivními efekty.
        -
                uuid: cd07db05-30ad-44d1-9ecf-912454c1df00
                topic: Graphplan jako BCSP
                front: BCSP podmínky
                back: >
                        <ul>
                        <li>
                        <i>Předpoklady</i>: [$]A_{i,m}\\rightarrow P_{j,m-1}[/$]
                        <li>
                        <i>Následující stav</i>:
                        [$$]p_{i,m}\\leftrightarrow (\\bigvee_{p_i\\in\\mathrm{eff}^+(a_j)} A_{j,m})
                        \\vee (p_{i,m-1} \\wedge (\\bigvee_{p_i\\in\\mathrm{eff}^-(a_j)} \\neg A_{j,m}))[/$$]
                        <br>
                        (Stav je aktivní, byl-li přidán a nebyl-li smazán;
                        nejsou no-opy.)
                        <li>
                        <i>Mutex</i> (abych nedovolil zároveň smazat a přidat):
                        [$]\\neg A_{i,m} \\vee \\neg A_{j,m}[/$],
                        [$]\\neg P_{i,n} \\vee \\neg P_{j,n}[/$]
                        <li>
                        <i>Počáteční a koncové atomy</i>
                        <li>
                        Žádné paralelní akce a žádné prázdné vrstvy.
                        </ul>
        -
                uuid: 6df84a72-3b04-4892-96a5-793fbd68bb2a
                front: Porovnání Graphplan jako CSP a SAT
                back: >
                        CSP je kompaktnější. Nepotřebuje axiomy vyloučení akcí
                        (protože na to je proměnná).
        -
                uuid: 1e7ecb60-bcd1-409f-8dbe-d10d7e058d42
                front: >
                        CSP, SAT jsou NP-c, ale plánování je PSPACE- nebo
                        NEXPTIME-c. Jak to?
                back: >
                        Převod na SAT/CSP exponenciálně zvětší problém.
                        SAT: exponenciálně mnoho proměnných,
                        CSP: proměnných sice lineárně, ale narůstají
                        domény.
