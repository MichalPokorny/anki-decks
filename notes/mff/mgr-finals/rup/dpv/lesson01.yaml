deck: All::Magisterské státnice::Řešení úloh a plánování::DPV::Přednáška 1 (řešení
        SAT)
notes:
        # DPV 01
        -       guid: prbw&*s2h1
                topic: Řešení SAT
                front: NNF formule a jak rychlý je převod
                back: |
                        Formule co má jenom [$]\\wedge, \\vee, \\neg[/$] a negace je jenom u literálů.
                        Převod trvá lineární čas (de Morgan a eliminace dvojité negace formuli neprodlužují).
        -       guid: dXzr-e1p~L
                topic: Řešení SAT
                front: |
                        Převod do CNF v lineárním čase: Jméno, jak se dělá
                back: |
                        Tseitinovo kódování.<br>
                        Vyrobím pro formuli generující strom,
                        pro vnitřní vrcholy vyrobím nové proměnné.
        -       guid: p=01]#X&Ql
                topic: Řešení SAT
                front: Definice - Antecedentní klauzule (v SAT solveru)
                back: |
                        Klauzule, která vyvolala unit propagaci literálu (ve které se nacházel).
        -       guid: oi|}yehqm-
                topic: Řešení SAT
                front: Definice implikačního grafu
                back: |
                        Graf popisuje fázi DPLL.<br>
                        Vrcholy jsou proměnné a K.
                        Jsou označené ohodnocením a "decision levelem".
                        <br>
                        Hrany jsou důvody k přiřazení hodnoty proměnné.
                        Hrana mezi [$]x\\rightarrow y[/$]:
                        [$]\\mathrm{Antecedent}(y)[/$] obsahuje buď [$]\\neg x[/$] a
                        [$]\\alpha(x)=1[/$], nebo obsahuje [$]x[/$] a [$]\\alpha(x)=0[/$].
                        Hrana je označena [$]\\mathrm{Antecedent}(y)[/$].
                        <br>
                        Vertex K označuje konflikt:
                        vlož hranu [$]x\\rightarrow K[/$]
                        pokud existuje konfliktní klauzule [$]c[/$] vzhledem k [$]\\alpha[/$]
                        a [$]c[/$] buď obsahuje [$]\\neg x[/$] a [$]\\alpha(x)=1[/$],
                        nebo obsahuje [$]x[/$] a [$]\\alpha(x)=0[/$].
                        Tuto hranu označ konfliktní klauzulí.
        -       guid: lx{e[WY>u@
                topic: Řešení SAT
                front: |
                        Jak z implikačního grafu vykoukám novou
                        konfliktní klauzule?
                back: |
                        Řez v grafu mezi rozhodnutími a K.
        -       guid: e-`[#ZY]!4
                topic: Řešení SAT
                front: K čemu jsou v implikačním grafu řezy?
                back: |
                        Řez mezi rozhodnutími a K je konfliktní
                        klauzule implikovaná rozhodnutími.
        -       guid: Q<d1?~PJ8?
                topic: Řešení SAT
                front: CDCL - zkratka
                back: |
                        Conflict-driven clause learning
        -       guid: FL+xTdt;|.
                topic: Řešení SAT
                front: CDCL - postup
                back: |
                        Udělej unit propagaci a pure variable elimination.<br>

                        Opakuj:
                        <ul>
                        <li>Vyber neohodnocenou proměnnou, nebo skonči.
                        <li>Přidej nové ohodnocení do modelu.
                        <li>(@) Unit propagace
                        <li>Jestli unit propagace dopadla špatně,
                        <li>zanalyzuj konflikt &mdash; najdi backtrack úroveň,
                            vlož novou naučenou klauzuli,
                        <li>backtrackuj před konflikt (smaž pozdější přiřazení),
                        <li>jdi na (@)
                        </ul>
        -       guid: ttY>Zr/}%^
                topic: Řešení SAT
                front: CDCL - Jak vybrat klauzuli k naučení?
                back: |
                        Asserting clause: konfliktní klauzule co obsahuje
                        přesně 1 literál ze současného rozhodnutí.
                        (Po backtracku unit propagace okamžitě dá rozhodnutí.)
                        <br>
                        Unique implication point: bod, skrz který vedou všechny
                        cesty z posledního decision vertexu do K.
                        <br>
                        Vyber UIP nejbližší ke K. Nauč se jako konfliktní
                        klauzuli tenhle UIP plus opak literálu z poslední
                        rozhodovací vrstvy.
        -       guid: b]<PZ$|wUn
                topic: Řešení SAT
                front: CDCL - Kam backtrackovat?
                back: |
                        Podívej se na klauzuli, kterou ses naučil.
                        Backtrackni do druhé nejhlubší úrovně přiřazení v ní.
                        (Smaž všechny rozhodnutí udělané potom.)
        -       guid: k_spsRb2)#
                topic: Řešení SAT
                front: CDCL - detaily analýzy konfliktu
                back: |
                        Vezmi konfliktní klauzuli.

                        Dokud neobsahuje konfliktní klauzule právě jeden literál
                        z posledního decision levelu: vezmi poslední v ní
                        dosazený literál a resolvuj ho s jeho antecedentem.
        -       guid: Qv}MWP;@`g
                topic: Řešení SAT
                front: |
                        Jména: Heuristiky pro výběr proměnných k dosazení
                back: |
                        VSIDS (Variable State Independent Decaying Sum),
                        Berkmin
        -       guid: GN3Sw:=h1C
                topic: Řešení SAT
                front: Heuristika VSIDS
                back: |
                        Každý literál má skóre. Když se naučím klauzuli,
                        přičtu jejím literálům 1, pravidelně všechny skóre
                        exponenciálně zmenšuju.
                        Preferuju řešit konfliktní klauzule.
        -       guid: LS<-b1p?;}
                topic: Řešení SAT
                front: Heuristika Berkmin
                back: |
                        Proměnná, literály mají VSIDS skóre, nedělí se
                        průběžně.<br>
                        Konfliktní klauzule házím do stacku.
                        Vybírám proměnnou &rarr; vezmu klauzuli
                        ze stacku, z ní dosadím do proměnné s nejvyšším skóre
                        a polaritu podle skóre literálu. Stack prázdný &rarr;
                        vyberu jinak.
        -       guid: RgSy+#x>V~
                topic: Řešení SAT
                front: Sledování dvou literálů
                back: |
                        V každé nevyřešené klauzuli označ 2 nedosazené
                        literály.
                        <br>
                        Proměnným udržuj označené výskyty. Dosadíš [$]x_1=0[/$]
                        &rarr; zkontroluj jen klauzule co sledují [$]x_1[/$]
                        &mdash; v nich hledej další proměnnou ke sledování.
                        Neexistuje-li, klauzule je jednotková.
        -       guid: LT4-_*222n
                front: Co udělá sledování dvou literálů při backtracku?
                back: Nic se nemusí měnit
