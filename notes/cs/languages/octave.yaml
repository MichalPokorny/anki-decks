topic: Octave/Matlab
deck: All::CS::Languages::Octave/Matlab
notes:
-       guid: t5Q.ey5@p=
        front: Set PS1
        back: "`PS1('>> ');`"
        include_reverse: true
-       guid: CB9(w([3v^
        front: Don't write out return value of command
        back: Semicolon after command
        include_reverse: true
-       guid: x05c@MNL{_
        front: Comment syntax
        back: '`a = 100; % comment`'
-       guid: pR_zih~(u
        front: Matrix of 2 rows, 3 columns, full of 1
        back: '`ones(2, 3)`'
        include_reverse: true
-       guid: zW81$e:r6G
        front: Matrix of 3 rows, 2 columns, full of 0
        back: '`zeros(3, 2)`'
        include_reverse: true
-       guid: ud}KQJ7N:U
        front: Identity matrix 5x5
        back: '`eye(5)`'
        include_reverse: true
-       guid: Q?%gHch]Ef
        front: List variables in workspace
        back: '`who`'
        include_reverse: true
-       guid: q:+Xk]C2M,
        front: Clear out a variable
        back: '`clear X`'
        include_reverse: true
-       guid: wVf:!D!*M]
        front: Matrix literal syntax?
        back: '`A=[1 2; 5 7; 0 1]`'
-       guid: s|]+>,,ybQ
        front: Create 2x2 matrix of uniform-distributed numbers [0;1]
        back: '`rand(2)`'
        include_reverse: true
-       guid: KAA,J6*XdM
        front: Matrix multiplication
        back: '`A = ones(2); B = rand(2); C = A * B`'
        include_reverse: true
-       guid: zBry.4g!&E
        front: Create matrix B with 1's where A's element >= 3
        back: '`B = (A >= 3)`'
-       guid: k?U3Mrq]*n
        front: Matrix transpose
        back: "`A'`"
-       guid: qzb>Bs~1,y
        front: Get number of rows in matrix
        back: '`A = [1 2; 30 40; 5 6]; size(A, 1)`'
        include_reverse: true
-       guid: A%6A24(Pux
        front: Get number of columns in matrix
        back: '`A = [1 2; 30 40; 5 6]; size(A, 2)`'
        include_reverse: true
-       guid: bNo72e!8yu
        front: Get (num rows, num columns) in matrix
        back: '`A = [1 2; 30 40; 5 6]; size(A)`'
        include_reverse: true
-       guid: JYFX#aN#5g
        front: Get help for command `eye`
        back: '`help eye`'
        include_reverse: true
-       guid: c+v2P)tCo^
        front: Booleans in Octave
        back: 1 = true, 0 = false
-       guid: CU|0<MKa1L
        front: '`a ~= b`'
        back: Non-equality operator (!=)
        include_reverse: true
-       guid: ikD3106(LI
        front: Element-wise matrix multiplication
        back: '`A .* B`'
        include_reverse: true
-       guid: An=OvLKHo;
        front: Element-wise matrix element squaring
        back: '`A .^ 2`'
        include_reverse: true
-       guid: mft*)NsBnQ
        front: Matrix (pseudo)inverse
        back: '`pinv(A)`'
        include_reverse: true
-       guid: ou`%Z@zra)
        front: Print value of variable
        back: '`disp(X);`'
        include_reverse: true
-       guid: QT|e>eVk4]
        front: Scalar equality test
        back: x == y
        include_reverse: true
-       guid: otxLfFA|If
        front: Logical and, or
        back: x && y; x || y;
-       guid: s&{K@[90Az
        front: Pi
        back: '`pi`'
-       guid: Pp._6-[tF#
        front: Print out formatted string
        back: "`disp(sprintf('Hello %.2f', a));`"
-       guid: pA+g<JgB?&
        front: Set number of printed digits to a few/a lot
        back: '`format short` / `format long;`'
        include_reverse: true
-       guid: AC1Z`z}.$`
        front: '`[1.0 1.2 1.4 ... 2.0]`'
        back: '`1.0:0.2:2.0`'
        include_reverse: true
-       guid: c%e,cq~}[`
        front: Row vector
        back: '[1 2 3]'
        include_reverse: true
-       guid: b$Ed^7j@#d
        front: Column vector
        back: '[1; 2; 3]'
        include_reverse: true
-       guid: QVxIwJAvIi
        front: Number of items in row or column vector
        back: length(x)
        include_reverse: true
-       guid: N~$Qz/tN:*
        front: Select vector items 2, 3, 4, 5. Works both for row and column vectors.
        back: '`x(2:5)`'
        include_reverse: true
-       guid: K>Ct<4VBb1
        front: Append column to matrix
        back: '`A = [A, [100; 101; 102]]`'
        include_reverse: true
-       guid: DpCe^!5):o
        front: Elementwise reciprocal
        back: 1 ./ v
        include_reverse: true
-       guid: l68&M$&new
        front: Matrix 3x3 full of 3's
        back: ones(3) + 2
        include_reverse: true
-       guid: x)5D57|MJ|
        front: Get list of indices where vector `x` is greater than 5
        back: '`x = [1 10 2 20]; find(x > 5)`'
        include_reverse: true
-       guid: QJ>@mMAc_P
        front: Return list of non-zero indices in vector
        back: '`find`'
        include_reverse: true
-       guid: sM&uDg#f&u
        front: Return 5x5 magic square
        back: '`magic(5)`'
        include_reverse: true
-       guid: q1shh2Q;hY
        front: Multiply together entire vector
        back: '`prod(v)`'
        include_reverse: true
-       guid: c1?#uOtvXU
        front: Vectorize matrix by appending rows together
        back: '`A(:)`'
        include_reverse: true
-       guid: N$]9^FbY-2
        front: Get matrix second column
        back: '`A(:,2)`'
        include_reverse: true
-       guid: ji5z8_LWb!
        front: Get matrix second row
        back: '`A(2,:)`'
        include_reverse: true
-       guid: F_$Y(@*}]4
        front: Get floor of value
        back: '`B = floor(A)`'
        include_reverse: true
-       guid: t)Vy2*T,Y=
        front: Get ceiling of value
        back: '`ceil(a)`'
        include_reverse: true
-       guid: O~vcg;.hJ=
        front: Save value in `v` into `.mat` (Octave/Matlab) format
        back: '`save hello.mat v`'
        include_reverse: true
-       guid: wO-.!j%L&8
        front: Clear out entire environment
        back: '`clear`'
        include_reverse: true
-       guid: sh_U2uQ<v2
        front: Show the histogram of `x`
        back: '`hist(x)`'
        include_reverse: true
-       guid: OZy3/G*SyP
        front: Get random matrix (5 rows, 3 columns), Gaussian-distributed, mean =
                0, variance = 1
        back: '`randn(5,3)`'
        include_reverse: true
-       guid: NKwN$_Hxjv
        front: Save string into variable
        back: "`b = 'hi';`"
-       guid: FSii?O%x7y
        front: Get working directory
        back: '`pwd`'
        include_reverse: true
-       guid: FNW>vd|c.4
        front: Flip matrix up-down
        back: '`flipud(X)`'
        include_reverse: true
-       guid: kOsr857UNa
        front: Variable storing last result
        back: '`ans`'
        include_reverse: true
-       guid: lp._wqFLx>
        front: Get row of matrix column averages
        back: '`mean(X);`'
        include_reverse: true
-       guid: ln$4Jp]|~$
        front: Get column of matrix row averages
        back: "`mean(X')';`"
        include_reverse: true
-       guid: M;a$Ywo$OP
        front: Get average of vector `a`
        back: '`mean(a);`'
-       guid: v9L@j/mf`6
        front: For-cycle syntax
        markdown: false
        back: |
                <code>
                for i = 1:10<br>
                  disp("Ahoj!");<br>
                endfor
                </code>
