topic: C
deck: All::CS::Languages::C
uid_tag: cs/languages/c
notes:
-       guid: '{vl$7<M,i'
        front: |
                Change `stdin` to point to `soubor.in`
        back: |
                `freopen("soubor.in", "r", stdin);`
-       guid: Lq-hKrh]/6
        front: '`erf`'
        back: Gauss distribution error function
        include_reverse: true
-       guid: hY^Tonr*w#
        front: |
                `free` behavior on `NULL`
        back: |
                OK. If `ptr` is `NULL`, no operation is performed.
-       guid: zD}ku}K>f=
        front: |
                GCC - destroy some identifier(s) forever
        back: |
                `#pragma GCC poison (identifiers)`
        include_reverse: true
-       guid: u0ejY`XP>W
        front: GCC - warn on misleading indentation
        back: |
                `gcc -Wmisleading-intentation`
        include_reverse: true
-       guid: Cr5w1*{Pp7
        front: No-return header
        back: |
                `stdnoreturn.h`;
                provides `noreturn` macro.
-       guid: I&]ZQ?PH3X
        front: Shortest crashing C program
        back: |
                `main;` (from `int main = 0;` &rarr; `main=0;` &rarr;
                `main;`)
-       guid: C#f]8^yH4W
        topic: C - `printf`
        front: Align to left (print '42  ')
        back: '`printf("%-4d\n", 42);`'
        include_reverse: true
-       guid: h^Q=W]UEk_
        topic: C - `printf`
        front: Print number with sign, + or - (print '+42')
        back: '`printf("%+d\n", 42);`'
        include_reverse: true
-       guid: M_b90&}A@3
        topic: C - `printf`
        front: |
                Print number with `-`, or `' '` for positives
                (print ' 42')
        back: '`printf("% d\n", 42);'
        include_reverse: true
-       guid: i&|fvO+$[q
        topic: C - `printf`
        front: |
                Print float in hexadecimal form (`0x1.91eb86p+1`)
        back: |
                `printf("pi=%a\n", 3.14);`
        include_reverse: true
-       guid: s{yg=kJzA=
        topic: C - `printf`
        front: |
                Print out `0x1a`, without `0x` in format string
        back: |
                `printf("%#X\n", 26);`
        include_reverse: true
-       guid: b_!_58Mkdt
        topic: C - `printf`
        front: |
                Print out `013` as octal representation of 11, without
                `0` in format string
        back: |
                `printf("%#o\n", 11);`
        include_reverse: true
-       guid: Hw$WSt7UKK
        front: |
                `calloc`
        back: |
                `void *calloc(size_t nmemb, size_t size);`; allocates
                memory, like `malloc`
-       guid: su;)P>,HJU
        front: |
                Dynamically allocate heap memory for an array
        back: |
                `void *calloc(size_t nmemb, size_t size);`;
                allocates memory, like `malloc`
-       guid: z^EHXq2b/+
        front: |
                `realloc`
        back: |
                `void *realloc(void *ptr, size_t size);`, `ptr` may be
                `NULL`
-       guid: PerDpN#?<L
        front: |
                Return value: `realloc`
        back: |
                Reallocated pointer or `NULL` on failure
-       guid: k;EE85)K7f
        front: |
                What does `puts("hello");` do?
        back: |
                Writes `hello` and a newline to `stdout`.
-       guid: H!,qzxfo6@
        front: |
                What to do with continuation markers in multi-line
                macro bodies?
        back: |
                Right-align them
-       guid: Ne{wDnn6kn
        front: |
                Why to use `reallocarray`
        back: |
                Because `num * size` in `malloc`/`realloc` call
                might lead to overflow
-       guid: q{-cbZ=02f
        front: |
                Prototype: `reallocarray`
        back: |
                `void* reallocarray(void *ptr, size_t nmemb,
                size_t size);`
-       guid: FD}7<3..LM
        front: |
                Function: Zero out memory without allowing
                de-optimizing it away (e.g., passwords)"
        back: |
                `explicit_bzero`
-       guid: dMIUbdCx5O
        front: |
                Purpose: `explicit_bzero`
        back: |
                Zero out memory without allowing de-optimizing it away
                (e.g., passwords).
-       guid: b}q`?HL00_
        front: |
                Prototype: `explicit_bzero`
        back: |
                `void explicit_bzero(void *buf, size_t len);`
-       guid: iDkm-p.n;>
        front: Syscalls to read/write to/from fd at a given offset.
        back: |
                `pread`/`pwrite`
-       guid: GY4V*]:7,|
        front: |
                Function: Aligned allocation
        back: |
                `aligned_alloc`
-       guid: LpjU{Y9wBy
        front: |
                Prototype: `aligned_alloc`
        back: |
                `void* aligned_alloc(size_t alignment, size_t size);`
-       guid: HOe$T%X+K^
        front: |
                Function: Abnormal program termination
        back: |
                `abort`
-       guid: c-6G.a*P_e
        front: |
                `abort` vs. `exit`
        back: |
                `abort` does not execute cleanup registered
                with `atexit`/`on_exit`
-       guid: xT@?dJVRG}
        front: |
                Prototype: `abort`
        back: |
                `void abort(void);`
-       guid: bfs,j(MMt5
        front: |
                Prototype: `on_exit`
        back: |
                `int on_exit(void (*func)(int status, void* arg), void* arg);`
-       guid: 'Gyb}Rvz=0:'
        front: |
                Return value: `on_exit`
        back: |
                0 if successful; otherwise a non-zero value
-       guid: B78).Vi0_P
        front: |
                Prototype: `exit`
        back: |
                `void exit(int status);`
-       guid: Pl>y@oMtET
        front: |
                Header file: `aligned_alloc`
        back: |
                `stdlib.h`
-       guid: s[VSv0f0t2
        front: |
                Prototype: `getenv`
        back: |
                `char* getenv(const char* name);`
-       guid: jjedosB3x*
        front: |
                Header file: `getenv`
        back: |
                `stdlib.h`
-       guid: LDpr;tiZ8Z
        front: |
                Difference between `getenv` and `secure_getenv`
        back: |
                `secure_getenv` returns `NULL` if program is running
                SUID or SGID enabled
        # TODO: mktemp
-       guid: q;yq%In+_8
        front: |
                Header file: `system`
        back: |
                `stdlib.h`
-       guid: k#_M?0p%p[
        front: |
                Prototype: `bsearch`
        back: |
                `void* bsearch(const void* key, const void* base, size_t nmemb, size_t size, compar_fn_t compar);`
-       guid: sJq2GdLM.x
        front: |
                Header file: `bsearch`
        back: |
                `stdlib.h`
-       guid: EeBHTN2v<|
        front: |
                Header file: `qsort`
        back: |
                `stdlib.h`
-       guid: ESm7d0m+kV
        front: |
                Header file: `qsort_r`
        back: |
                `stdlib.h`
-       guid: lc{V@;bjF]
        front: |
                Prototype: `qsort`
        back: |
                `void qsort(void* base, size_t nmemb, size_t size, compar_fn_t compar);`
-       guid: l8,yLWKU(6
        front: |
                Header file: `abs`
        back: |
                `stdlib.h`
-       guid: DULLl?0wno
        front: |
                Function: `abs` for `long`s
        back: |
                `labs`
-       guid: hMT+u1BljP
        front: |
                Macro: `e`
        back: |
                `M_E`
        include_reverse: true
-       guid: mC0vAJ,&/|
        front: |
                Macro: [$]\\pi[/$]
        back: |
                `M_PI`
        include_reverse: true
-       guid: E>!_MJ{D$(
        front: |
                Macro: [$]\\pi/2[/$]
        back: |
                `M_PI_2`
        include_reverse: true
-       guid: G!~lK>$)GH
        front: |
                Macro: [$]2\\pi[/$]
        back: |
                `M_2_PI`
        include_reverse: true
-       guid: v3msi%Q0h6
        front: |
                Macro: [$]\\sqrt{2}[/$]
        back: |
                `M_SQRT2`
        include_reverse: true
-       guid: k}XT>!a--&
        front: |
                Prototype: `putc`
        back: |
                `int putc(int c, FILE* stream);`
-       guid: O%:3_[O1l-
        front: |
                Function: Get file descriptor for `FILE*`
        back: |
                `fileno`
