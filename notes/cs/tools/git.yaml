topic: Git
deck: All::CS::Tools::git
uid_tag: git
notes:
-       guid: j1++^$OaA#
        front: Generate fixup commit that can be autosquashed
        back: '`git commit --fixup=HEAD`'
        include_reverse: true
-       guid: y)+WTE=@Nu
        front: Show content of file at some revision
        back: '`git show commitish:filename`'
        include_reverse: true
-       guid: kO?:BtE6qd
        front: Store object into object database
        back: '`echo "hello world" | git hash-object -w --stdin`'
        include_reverse: true
-       guid: h$0U>G>Did
        front: Get content of object
        back: '`git cat-file -p (sha1)`'
        include_reverse: true
-       guid: gKtq;nmd#n
        front: Diff word-by-word
        back: '`git diff --word-diff`'
        include_reverse: true
-       guid: sDOnP$rbQ.
        front: Get representation with tag and current commit
        back: '`git describe` -- "2.0.0-125-gc7d7c65"'
        include_reverse: false
-       guid: A/pkW3kPlX
        front: Push tags to remote
        back: '`git push origin --tags`'
        include_reverse: true
-       guid: D>gM+HGHX*
        front: Get branches merged into HEAD
        back: '`git branch --merged`'
        include_reverse: true
-       guid: FoT1[/m(`k
        front: Get branches, not including those merged into HEAD
        back: '`git branch --no-merged`'
        include_reverse: true
-       guid: G5w`+<+xjp
        front: Stage hunk-by-hunk
        back: '`git add -p`'
        include_reverse: true
-       guid: j;G>t*Y!d$
        front: Pull and try to rebase atop updated upstream
        back: '`git pull --rebase`'
        include_reverse: true
-       guid: zVnj6SH{co
        front: Get working directory
        back: '`git rev-parse --show-toplevel`'
        include_reverse: true
-       guid: q[$|sG(2S|
        front: Automatically squash fixup commits
        back: '`git rebase --autosquash`'
        include_reverse: true
-       guid: iDS~?wGl~D
        front: Pull, but don't create merge commit or rebase.
        back: '`git pull --ff-only`'
        include_reverse: true
-       guid: unRiL{XC?O
        front: Forcefully push, but only if remote's branch hasn't moved forward from
                my snapshot of it.
        back: '`git push --force-with-lease`'
        include_reverse: true
-       guid: CSg>7w38++
        front: Show diff in index
        back: '`git diff --staged`'
        include_reverse: true
-       guid: u!=rk<L)}4
        front: List available diff tools
        back: '`git difftool --tool-help`'
-       guid: Ox1VyZZ*KA
        front: '`HEAD~1`'
        back: Previous commit to HEAD
-       guid: N/XC[T?=zD
        front: 10 commits before HEAD
        back: '`HEAD~10`'
        include_reverse: true
-       guid: e?itel/i|D
        front: Start showing new, unstaged file in `git diff`
        back: git add --intent-to-add (file)
        include_reverse: true
-       guid: Oe<_cZ]:?g
        front: Return 0 if index is clean, 1 otherwise
        back: git diff --quiet --exit-code --staged
        include_reverse: true
-       guid: ucp*d%~USs
        front: Checkout a new branch unrelated to master
        back: git checkout --orphan
        include_reverse: true
