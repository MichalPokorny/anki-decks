topic: Vim
deck: All::CS::Tools::Vim
uid_tag: vim
notes:
-       guid: h&PJt:8*mq
        front: Increment/decrement current number
        back: '`C-a`, `C-x`'
        include_reverse: true
-       guid: C*^^rC1|s5
        front: Move one paragraph forward/backward
        back: '`{}`'
        include_reverse: true
-       guid: u/`Ltcoc7U
        front: Move one sentence forward/backward
        back: '`()`'
        include_reverse: true
-       guid: v?28~}&Vaq
        front: Go to other end of selection in visual mode
        back: '`o`'
-       guid: Fh#h1rW;%0
        front: Insert output of command
        back: '`:read !ls /home`'
        include_reverse: true
-       guid: oFIYDYG`4C
        front: Create mark
        back: '`mX` (`X` = mark name)'
        include_reverse: true
-       guid: El0(K[BbXM
        front: Go to mark
        back: "`'X` (`X` = mark name)"
        include_reverse: true
-       guid: OGrWs;Kiy~
        front: Start and open a window for each file
        back: '`vim -o ...`'
        include_reverse: true
-       guid: F[|A@=-m4)
        front: Start and open a window for each file, split vertically
        back: '`vim -O ...`'
        include_reverse: true
-       guid: D:q%kfQ8nC
        front: Revive last selection
        back: '`gv`'
        include_reverse: true
-       guid: NIOS&M{A+X
        front: Run filter command over buffer
        back: '`:%!command`'
        include_reverse: true
-       guid: ksFHq6.4d]
        front: Insert file content here
        back: |
                `:read (file)` &mdash; aka `:r (file)`
        include_reverse: true
-       guid: xcELsLw=$a
        front: Create directory for current buffer
        back: '`:!mkdir -p %:h`'
        include_reverse: true
-       guid: :XcyFc=~Y
        front: Open read-only Vim
        back: '`view`'
        include_reverse: true
-       guid: qktQXgEi+q
        front: '`M` in Normal mode'
        back: Go to middle of page
        include_reverse: true
-       guid: i{%vh`VX_0
        front: '`H` in Normal mode'
        back: Go to start of page
        include_reverse: true
-       guid: NG.I=la4e>
        front: '`L` in Normal mode'
        back: Go to end of page
        include_reverse: true
-       guid: xvr;}k.^Yf
        front: '`]c`, `[c`'
        back: Jump to next, previous change in `vimdiff`
        include_reverse: true
-       guid: JLeYj}Bw$g
        front: '`O`'
        back: Insert line above and start writing
        include_reverse: true
-       guid: q)S=v;HH-P
        front: '`b`'
        back: Go back by a word
        include_reverse: true
-       guid: b<$rvITA<1
        front: '`%`'
        back: Jump to matching pair construct (`()`/`[]`/`#if`/...)
        include_reverse: true
-       guid: IE{o@Qhf0[
        front: '`g~`'
        back: Switch upper/lowercase in selection
        include_reverse: true
-       guid: pHrKI/i+bL
        front: '`gu`'
        back: Switch selection to lowercase
        include_reverse: true
-       guid: IZIp|b20$/
        front: '`gU`'
        back: Switch selection to uppercase
        include_reverse: true
-       guid: v7L[sa|C*2
        front: '`~`'
        back: Switch upper/lowercase of character
        include_reverse: true
-       guid: K=S2?5oO-H
        front: Write buffer, appending its content to `otherfile.txt`
        back: '`:w >>otherfile.txt`'
        include_reverse: true
-       guid: F-ssK~G!JU
        front: Jump immediately before next occurence of `x` on this line
        back: '`tx`'
        include_reverse: true
-       guid: m~A(2Wqgx;
        front: Search current word, backwards
        back: '`#`'
        include_reverse: true
-       guid: MdS`u1)=T
        topic: Vim - Insert mode
        front: Paste content of register
        back: '`C-r (register)`'
        include_reverse: true
-       guid: bcBvKdyMJu
        front: Arithmetic register
        back: |
                `=`
-       guid: Q0xGo;jFg7
        topic: Vim - Insert mode
        front: Paste 5+15
        back: '`C-r =5+15 <Enter>`'
-       guid: cwjTf7h*h~
        front: Scroll down without changing focused line
        back: |
                `C-e`
                # mnemonic: "E-xtra lines"
        include_reverse: true
-       guid: hk>RbXLLl]
        front: Scroll up without changing focused line
        back: |
                `C-y`
        include_reverse: true
-       guid: G~`cbdo>zD
        front: Find a pattern and add something to occurences
        back: '`:%s/pattern/&+something/` => replace `pattern` with `pattern+something`'
-       guid: x5`xqFB5Yt
        front: Open window with command history
        back: '`q:`'
-       guid: wO?(5B5XWb
        topic: Vim - Insert mode
        front: '`C-w`'
        back: Delete last word
        include_reverse: true
-       guid: pf7dXrVOJ9
        topic: Vim - Insert mode
        front: '`C-u`'
        back: Backspace until start of line
        include_reverse: true
-       guid: mwP]4Z|>&j
        front: Replace current line with output of command
        back: '`!!` (...)'
        include_reverse: true
-       guid: G!ZEkY&cD=
        front: Insert output of command here
        back: '`:r!xyz`'
        include_reverse: true
-       guid: r8(jNEs<;X
        front: Change window height to 35 lines
        back: '`35 C-w _`'
        include_reverse: true
-       guid: tPUU+%yocV
        front: Change window width to 35 chars
        back: '`35 C-w |`'
        include_reverse: true
-       guid: HZ?K#TW9]o
        front: Go to previous position in position stack
        back: '`C-o`'
        include_reverse: true
-       guid: Oo}e:2.$f5
        front: Go to next position in position stack
        back: '`C-i`'
        include_reverse: true
-       guid: y^qsis-(Y}
        front: Change entire line
        back: '`cc` or `C`'
        include_reverse: true
-       guid: M.z2_]G:4^
        front: Get man page of current word
        back: '`K`'
        include_reverse: true
-       guid: fF]jwY3Ro)
        topic: Vim - Insert mode
        front: Insert character at same position in line above
        back: '`C-y`'
        include_reverse: true
-       guid: uy1~zu5kp[
        front: Get UTF-8 representation of char
        back: '`g8`'
        include_reverse: true
-       guid: 'FK1;!rOPz:'
        front: Get ASCII representation of char, including hex
        back: '`ga`'
        include_reverse: true
-       guid: L|P7Kz%vqT
        front: Cursor to column 10
        back: '`10|`'
        include_reverse: true
-       guid: c@%jBHdiQ*
        front: Go to 40% of file
        back: '`40%`'
        include_reverse: true
-       guid: E?@hE-Rg(k
        front: Equalize windows
        back: '`C-w =`'
        include_reverse: true
-       guid: vg#M%e62H{
        front: List errors
        back: '`:clist`'
        include_reverse: true
-       guid: oCUqYkFo)2
        front: List errors, in new window
        back: '`:copen`'
        include_reverse: true
-       guid: hT&;:b0Xnd
        front: List errors, including whole `makeprg` output
        back: '`:clist!`'
        include_reverse: true
-       guid: DHYV5gc:WL
        front: Goto beginning of previous word
        back: '`b`'
        include_reverse: true
-       guid: 'BB#PbZ/2M:'
        front: Goto next word end
        back: '`e`'
        include_reverse: true
-       guid: q)e(>X~5ZD
        front: Repeat last executed macro
        back: '`@@`'
        include_reverse: true
-       guid: rSged+zmE-
        front: Write buffer to new filename and switch to new filename
        back: '`:saveas x`'
        include_reverse: true
-       guid: OraA+!NXo[
        front: Open file under cursor
        back: '`gf`'
        include_reverse: true
-       guid: ndv34!%OL<
        front: Switch between last 2 files
        back: '`C-^`'
        include_reverse: true
-       guid: w=O$Osk+l~
        topic: Vim - Insert mode
        front: Do one normal mode command
        back: '`C-o`'
        include_reverse: true
-       guid: bbUm{uyFJW
        front: Go to 100th file character
        back: '`:goto 100`'
        include_reverse: true
-       guid: FRV$Ekdxm-
        front: Pipe buffer into the command `foo`
        back: '`:w !foo`'
        include_reverse: true
-       guid: sggzfRu*Gn
        front: Record macro `c`
        back: '`qc ... ... q`'
        include_reverse: true
-       guid: k5?1almf4,
        front: Play macro `c`
        back: '`@c`'
        include_reverse: true
-       guid: r.6,@ay^hL
        topic: Vim - Insert mode
        front: '`C-n`'
        back: Next autocomplete
        include_reverse: true
-       guid: scg*C2tBjR
        topic: Vim - Insert mode
        front: '`C-p`'
        back: Previous autocomplete
        include_reverse: true
-       guid: 'pomyQ0wyv:'
        front: '`:cn`'
        back: Go to next error
        include_reverse: true
-       guid: M/WHj%^&>C
        front: '`:cc`'
        back: Show this error's full error message
        include_reverse: true
-       guid: oF]s%p0o^Q
        front: '`;`'
        back: Next character search match on this line
        include_reverse: true
-       guid: e;*13cY>B%
        front: '`,`'
        back: Previous character search match on this line
        include_reverse: true
-       guid: c2d-g6C[H*
        front: Mark of start of last changed text (e.g., pasted)
        back: <code>\`[</code>
        include_reverse: true
-       guid: Ri,A:Xei7D
        front: Mark of end of last changed text (e.g., pasted)
        back: <code>\`]</code>
        include_reverse: true
-       guid: hX$BEg!$F0
        front: Select last changed text (e.g., pasted)
        back: <code>\`[v\`]</code>
        include_reverse: true
-       guid: xndnJCB2Xw
        front: Undo all changes on current line
        back: '`U`'
        include_reverse: true
-       guid: qaY,&l7M@y
        front: Center current line on screen
        back: '`zz`'
        include_reverse: true
-       guid: f]01BWR#i3
        front: Rot-13 selection (Visual mode)
        back: '`g?`'
        include_reverse: true
-       guid: dATc2v}|E9
        front: Go to definition (globally)
        back: '`gD`'
        include_reverse: true
-       guid: B-Npa[T~UY
        front: Go to definition (only in current function)
        back: '`gd`'
        include_reverse: true
-       guid: caOPIA$OH|
        front: Move to next method in programming language
        back: '`]m`'
        include_reverse: true
-       guid: h45][w|o))
        front: Move to previous method in programming language
        back: '`[m`'
        include_reverse: true
-       guid: bVEi,%Cp81
        front: Reformat current paragraph
        back: '`{gq}`'
        include_reverse: true
-       guid: HzTMS<Nea2
        front: Reformat until `(movement)`
        back: '`gq(movement)`'
        include_reverse: true
-       guid: sk}Dt{JRNr
        front: List all marks
        back: '`:marks`'
        include_reverse: true
-       guid: q9!?V~b_}S
        front: Open and edit new buffer
        back: '`:enew`'
        include_reverse: true
-       guid: okQnDrnt9d
        front: Split vertically and explore filesystem
        back: '`:Sex`'
        include_reverse: true
-       guid: sbLA)&@v%T
        front: Repeat last replace
        back: "`&`"
        include_reverse: true
-       guid: M`%-Ti.lk<
        front: Move 1 screen down
        back: "`C-f`"
        include_reverse: true
-       guid: k+bTVs[|+
        front: Move 1 screen down
        back: "`C-b`"
        include_reverse: true
-       guid: u$eT$Zk!Z)
        topic: Vim - Help
        front: Follow link
        back: "`C-]`"
        include_reverse: true
-       guid: QTk&UAqAf`
        topic: Vim - Help
        front: Go back
        back: "`C-t`"
        include_reverse: true
-       guid: QW:VMwI#lb
        front: Run global search-and-replace `xxx` to `yyy` over all buffers
        back: "`:bufdo %s/xxx/yyy/g`"
        include_reverse: true
-       guid: s@2;ONJ0`U
        front: "`C-[`"
        back: Alternative spelling of `Esc`
-       guid: q#!16)NYq%
        front: "`C-c`"
        back: Alternative spelling of `Esc`
-       guid: GxJf=@&dFC
        front: "Rotate windows"
        back: "`C-W r`/`R`"
        include_reverse: true
-       guid: r(54rIAkUm
        front: "Increase/decrease window height"
        back: "`<num> C-W +/-`"
        include_reverse: true
-       guid: L]e~iCF$|6
        front: "Increase/decrease window width"
        back: |
                `<num> C-W >/<`
        include_reverse: true
-       guid: KPJN)gjE6K
        front: Open all edited files in windows
        back: |
                `:all`
        include_reverse: true
-       guid: Cvj_i8r@p%
        front: |
                `S`
        back: Edit entire line
        include_reverse: true
-       guid: E6a6hnf|bE
        front: |
                `s`
        back: Edit single character
        include_reverse: true
-       guid: H(cZLf>LaO
        front: |
                `W`
        back: Go to start of next whitespace-separated word
        include_reverse: true
-       guid: CQnW[<h-`~
        front: |
                `B`
        back: Go to start of previous whitespace-separated word
        include_reverse: true
-       guid: N%4ymgYP5F
        front: |
                `E`
        back: Go to end of current whitespace-separated word
        include_reverse: true
-       guid: F+0d[@xl-`
        front: |
                `gE`
        back: Go to end of previous whitespace-separated word
        include_reverse: true
-       guid: ez$g;wd*u=
        front: |
                Search-and-replace occurences of the <b>word</b> "vi" with VIM
        markdown: false
        back: |
                <code>:%s/\<vi\>/VIM/g</code>
        include_reverse: true
-       guid: LS9L{*Y=MM
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Whitespace character
        back: |
                <code>\s</code>
-       guid: j?36[O^Jjg
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Any character except new line
        back: |
                <code>.</code>
-       guid: djyBkQoPtL
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Digit
        back: |
                <code>\d</code>
-       guid: B7JWh3f&By
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Uppercase character
        back: |
                <code>\u</code>
-       guid: Pc98phF%y0
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Lowercase character
        back: |
                <code>\l</code>
-       guid: O!HO*O;I=H
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Word character
        back: |
                <code>\w</code>
-       guid: BbRxa%Y^>T
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match 0 or more
        back: |
                <code>*</code>
-       guid: PR;|ll5Bbf
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match 1 or more
        back: |
                <code>\+</code>
-       guid: r(juwGuu2&
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match 0 or 1
        back: |
                <code>\=</code>
-       guid: wz3SbyQuVI
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match <code>n</code> to <code>m</code> times the preceding
        back: |
                <code>\{n,m}</code>
-       guid: crAvFj@S,9
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match exactly <code>n</code> times the preceding
        back: |
                <code>\{n}</code>
-       guid: Hg@lPvl^*g
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match up to <code>n</code> times the preceding
        back: |
                <code>\{,n}</code>
-       guid: J-;_gG4+7v
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match at least <code>n</code> times the preceding
        back: |
                <code>\{n,}</code>
-       guid: BQ]?#<+y5]
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Range: G, H, ... R
        back: |
                <code>[G-R]</code>
-       guid: i-?NN45H:W
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Range: Anything that's not a "
        back: |
                <code>[^"]</code>
-       guid: f,H|ra~v0V
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match literal <code>.</code>
        back: |
                <code>\.</code>
-       guid: oQBl<]rJd;
        topic: Vim search
        markdown: false
        include:reverse: true
        front: |
                Whole matched pattern
        back: |
                <code>&</code>
-       guid: w^gDY)@/8V
        topic: Vim search
        markdown: false
        include:reverse: true
        front: |
                Pattern matched in first pair of <code>\(\)</code>
        back: |
                <code>\1</code>
-       guid: Dw9gLxfLlk
        topic: Vim search
        markdown: false
        include:reverse: true
        front: |
                Pattern matched in <code>n</code>-th pair of <code>\(\)</code>
        back: |
                <code>\n</code>
-       guid: g-Bscv{[7I
        topic: Vim search
        markdown: false
        include:reverse: true
        front: |
                Replace - split line in two at this point
        back: |
                <code>\r</code>
-       guid: CB8k[7X;?J
        topic: Vim search
        markdown: false
        include:reverse: true
        front: |
                Replace - start: make following characters uppercase
        back: |
                <code>\U</code>
-       guid: G$/gaM-)7!
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Replace - start: make following characters lowercase
        back: |
                <code>\L</code>
-       guid: nug&<z|[#T
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Replace - end of make following characters upper/lowercase
        back: |
                <code>\E</code>
-       guid: GW[nDZ@oN,
        topic: Vim search
        markdown: false
        include:reverse: true
        front: |
                Replace - start: make next character uppercase
        back: |
                <code>\u</code>
-       guid: A|CWGc_7/8
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Replace - start: make next character lowercase
        back: |
                <code>\l</code>
-       guid: EOQj93[e)d
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Match either expression <code>e1</code> or <code>e2</code>
        back: |
                <code>e1\|e2</code>
-       guid: xm%G3oUk$B
        topic: Vim search
        markdown: false
        include_reverse: true
        front: |
                Find the <b>word</b> red, green, or blue
        back: |
                <code>\<\(red\|green\|blue\)\></code>

